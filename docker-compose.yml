version: "3.1"

networks:
  web:
    external:
      name: traefik_webgateway

services:
  elasticsearch:
    image: khezen/elasticsearch:6.2.2
    environment:
      - "CLUSTER_NAME=developers-italia"
      - "ELASTIC_PWD=${ELASTIC_PWD}"
      - "KIBANA_PWD=${KIBANA_PWD}"
      - "ES_TMPDIR=/tmp"
      - "HTTP_SSL=false"
    labels:
      - "traefik.enable=true"
      - 'traefik.backend=elasticsearch'
      - 'traefik.port=9200'
      - 'traefik.frontend.rule=Host:elasticsearch.${PROJECT_BASE_URL};Method:GET'
      - "traefik.frontend.headers.customRequestHeaders=Authorization: Basic ${ELASTIC_BASIC_AUTH_TOKEN}"
      - "traefik.frontend.rateLimit.extractorFunc=client.ip"
      - "traefik.frontend.rateLimit.rateSet.elasticsearch.period=60s"
      - "traefik.frontend.rateLimit.rateSet.elasticsearch.average=100"
      - "traefik.frontend.rateLimit.rateSet.elasticsearch.burst=200"
    networks:
      - web
    volumes:
      - es_data:/elasticsearch/data
      - ./docker/elasticsearch/config/elasticsearch.yml:/elasticsearch/config/elasticsearch.yml

  kibana:
    image: khezen/kibana:6.2.2
    labels:
      - "traefik.enable=true"
      - 'traefik.backend=kibana'
      - 'traefik.port=5601'
      - 'traefik.frontend.rule=Host:kibana.${PROJECT_BASE_URL}'
    networks:
      - web
    volumes:
      - ./docker/kibana/config/kibana.yml:/opt/kibana-6.2.2-linux-x86_64/config/kibana.yml

  prometheus:
    image: quay.io/prometheus/prometheus:v2.2.1
    labels:
      - "traefik.enable=true"
      - 'traefik.backend=prometheus'
      - 'traefik.port=9090'
      - 'traefik.frontend.rule=Host:prometheus.${PROJECT_BASE_URL}'
    networks:
      - web
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

#  spider:
#    image: italia/developers-italia-backend:0.0.1
#    networks:
#      - web

# De comment next lines if you don't have Tr√¶fik running locally:
  proxy:
   command: --api --docker --docker.exposedByDefault=false --logLevel=DEBUG
   image: containous/traefik:experimental
   networks:
     - web
   ports:
     - "80:80"
     - "443:443"
     - "8080:8080"
   restart: always
   volumes:
     - /var/run/docker.sock:/var/run/docker.sock

volumes:
  es_data:
    driver: local
